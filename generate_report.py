from fpdf import FPDF # type: ignore
import matplotlib.pyplot as plt
import io
from datetime import datetime

def generate_sybil_report(wallet_address, metrics, txs, prediction):
    pdf = FPDF()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()

    pdf.set_font("Arial", "B", 16)
    pdf.cell(0, 10, "Ethereum Sybil Wallet Report", ln=True, align="C")

    pdf.ln(5)
    pdf.set_font("Arial", "", 12)
    pdf.cell(0, 10, f"Wallet Address: {wallet_address}", ln=True)
    pdf.cell(0, 10, f"Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", ln=True)

    pdf.ln(10)
    pdf.set_font("Arial", "B", 14)
    pdf.cell(0, 10, "Sybil Risk Summary", ln=True)
    pdf.set_font("Arial", "", 12)
    risk_text = (
        "High Risk - Suspicious activity detected."
        if prediction == 1
        else "Low Risk - No suspicious patterns detected."
    )
    pdf.multi_cell(0, 10, risk_text)

    pdf.ln(5)
    pdf.set_font("Arial", "B", 14)
    pdf.cell(0, 10, "Wallet Metrics", ln=True)
    pdf.set_font("Arial", "", 12)

    for key, value in metrics.items():
        pdf.cell(0, 8, f"{key}: {value}", ln=True)

    pdf.ln(10)

    fig, ax = plt.subplots()
    txs.plot(x="timeStamp", y="value", kind="line", ax=ax, title="Transaction Value Over Time")
    plt.xlabel("Date")
    plt.ylabel("ETH")
    chart_buf = io.BytesIO()
    plt.savefig(chart_buf, format="PNG")
    plt.close()
    chart_buf.seek(0)
    pdf.cell(0, 10, "Transaction Value Chart:", ln=True)
    pdf.image(chart_buf, w=170)
    chart_buf.close()

    fig, ax = plt.subplots()
    txs.plot(x="timeStamp", y="gasUsed", kind="bar", ax=ax, title="Gas Used Over Time")
    plt.xlabel("Date")
    plt.ylabel("Gas")
    chart_buf2 = io.BytesIO()
    plt.savefig(chart_buf2, format="PNG")
    plt.close()
    chart_buf2.seek(0)
    pdf.cell(0, 10, "Gas Usage Chart:", ln=True)
    pdf.image(chart_buf2, w=170)
    chart_buf2.close()

    pdf.set_font("Arial", "I", 10)
    pdf.cell(0, 10, "Report generated by Sybil Wallet Checker", ln=True, align="C")

    return pdf.output(dest="S").encode("latin1")
